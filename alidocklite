#!/bin/bash

Usage()
{
  cat <<-END
  ${0##*/}: A light container for ALICE software

  Usage:

      --localhome <path>
        sets the container's home directory on the host machine (default ~/alidocklite)

      --image <image>
        sets container image to execute (default rpez/alidocklite:latest)

      --cmd <command with arguments>
        specify a command to execute on the container. Must be the last option passed to ${0##*/}

      --verbose
        Prints a lot of information for debuggin.

      --shm-size  <VAL>
        Sets the shared memory size (default 3g)

      --port <port>
        ssh port used by the container. Used by localhost only. (default 22222)

      --build
        Builds the container from DOCKERFILE at the  ${0##*/} dir.
        In this system: `dirname "$0"`

      --no-cache
        Passes the --no-cache option to docker. This disables image caching and build the image from scratch.

END
  exit

}


build () {
    ALIDOCKLITEDOCKERFILE=`dirname "$0"`

    if [ -z "${IMAGE}" ]
    then
	  IMAGE=alidocklite_custom
          read -p "No image name given. OK to proceed using alidocklite_custom (Y/n)?" choice
          case "$choice" in
              n|N ) exit 0
		    ;;
         esac
    fi
    BUILDCMD="docker build --no-cache -t ${IMAGE} $ALIDOCKLITEDOCKERFILE"
    echo ${BUILDCMD}
    ${BUILDCMD}
    if ! [ $?==0 ]
       then
    echo To run this custom container ensure alidocklite is not running and use the following command:
    echo "${0##*/} -t ${IMAGE}"
    exit
    fi


}

alidocklite_ () {

SSHQUIET=${SSHQUIET:-"-q"}
SSHPORT=${SSHPORT:-"2${UID}"}
JUPYTERPORT=$UID
DUMP_OUTPUT=${DUMP_OUTPUT:-"| tee /dev/null # "}
LOCALDIR=${LOCALDIR:-"$HOME/alidocklite"} # shared dir on the host
IMAGE=${IMAGE:-"rpez/alidocklite"}
SHMSIZE=$SHMSIZE:-"3g"
WORKDIR=/home/alidocklite  # shared dir inside the container
NAME=alidocklite_$USER

ALIDOCKLITE_RUN_CMD="docker run -d -it --shm-size=3g -p ${SSHPORT}:22 -p ${JUPYTERPORT}:8890 --hostname $NAME --name $NAME -e HOSTUSER=$USER  -v $LOCALDIR:$WORKDIR $IMAGE"
ALIDOCKLITE_ENTER_CMD="ssh ${SSHQUIET} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -XC -p ${SSHPORT} -i $LOCALDIR/.alidock-ssh/alidock.pem 0.0.0.0  ${CMD}"
ALIDOCKLITE_RM_CMD="docker rm $NAME"

mkdir -p $LOCALDIR
chmod 700 $LOCALDIR

$ALIDOCKLITE_RUN_CMD ${DUMP_OUTPUT} &> /dev/null
if [ $? == 0 ];
   then
   sleep .5
   $ALIDOCKLITE_ENTER_CMD
   else
   $ALIDOCKLITE_RM_CMD ${DUMP_OUTPUT} &> /dev/null
   $ALIDOCKLITE_RUN_CMD ${DUMP_OUTPUT} &> /dev/null
   sleep .5
   $ALIDOCKLITE_ENTER_CMD
fi



}



RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color
YELLOW='\033[1;33m'

while [ $# -gt 0 ] ; do
case $1 in
      --help|-h)
      Usage
      exit
      ;;
    --localhome)
	LOCALDIR="$1"
      shift 2
      ;;
    --image)
	IMAGE="$2"
      shift 2
      ;;
      --shm-size)
      SHMSIZE="$2";
      shift 2
      ;;
      --build)
	  BUILDALIDOCKLITE="1"
	  shift 1
      ;;
      --port)
      SSHPORT="$2";
      shift 2
      ;;
      --no-cache)
      NOCACHE="1";
      shift 1
      ;;
      --verbose)
	  DUMP_OUTPUT=" # "
	  SSHQUIET=" "
      shift 1
      ;;
      --cmd)
	  shift 1
	  CMD="$@"
	  alidocklite_
          exit
      ;;
      -h)
      Usage
      ;;
      *) echo "Wrong input"; Usage;




esac
done

if ! [ -z ${BUILDALIDOCKLITE+x} ]
then
build
exit
fi


alidocklite_
